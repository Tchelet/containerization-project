version: '3.8'

services:
  backend:
    container_name: backend-service
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    command: ["python", "app.py"]
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://user:password@db:5432/tasks_db  

  frontend:
    container_name: frontend-service
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "8000:8000"
    command: ["python", "app.py"]
    networks:
      - app-network

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tasks_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d tasks_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data: